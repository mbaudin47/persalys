diff --git a/src/runtime/TypeConversions.cxx b/src/runtime/TypeConversions.cxx
index 43589cf3..133aaf44 100644
--- a/src/runtime/TypeConversions.cxx
+++ b/src/runtime/TypeConversions.cxx
@@ -742,7 +742,7 @@ namespace YACS
           if (PyUnicode_Check(o))
             {
               Py_ssize_t size;
-              char *ptr = PyUnicode_AsUTF8AndSize(o, &size);
+              char *ptr = (char*) PyUnicode_AsUTF8AndSize(o, &size);
               if (!ptr)
                 throw YACS::ENGINE::ConversionException("Conversion from PyUnicode to string failed");
               s.assign(ptr, size);
@@ -793,7 +793,7 @@ namespace YACS
               // the objref is used by Python as a string (prefix:value) keep it as a string
               Py_ssize_t size;
               std::string s;
-              char *ptr = PyUnicode_AsUTF8AndSize(o, &size);
+              char *ptr = (char*) PyUnicode_AsUTF8AndSize(o, &size);
               if (!ptr)
                 throw YACS::ENGINE::ConversionException("Conversion from PyUnicode to string failed");
               s.assign(ptr, size);
@@ -846,7 +846,7 @@ namespace YACS
                 }
               Py_ssize_t size;
               std::string mystr;
-              char *ptr = PyUnicode_AsUTF8AndSize(pystring, &size);
+              const char *ptr = (char*) PyUnicode_AsUTF8AndSize(pystring, &size);
               if (!ptr)
                 throw YACS::ENGINE::ConversionException("Conversion from PyUnicode to string failed");
               mystr.assign(ptr, size);
@@ -2315,7 +2315,7 @@ namespace YACS
     	s=PyObject_ASCII(ob); // escape non ASCII characters and like repr(), which is not the same as str()...
       }
       Py_ssize_t size;
-      char* characters=PyUnicode_AsUTF8AndSize(s, &size);
+      char* characters = (char*) PyUnicode_AsUTF8AndSize(s, &size);
       std::string ss( characters, size);
       Py_DECREF(s);
       PyGILState_Release(gstate);
diff --git a/src/yacsloader/Test/YacsLoaderTest.cxx b/src/yacsloader/Test/YacsLoaderTest.cxx
index eca557c8..141d9b5c 100644
--- a/src/yacsloader/Test/YacsLoaderTest.cxx
+++ b/src/yacsloader/Test/YacsLoaderTest.cxx
@@ -252,7 +252,7 @@ void YacsLoaderTest::eschema()
   if (p)
     {
       PyObject *data = ((OutputPyPort*)p->nodeMap["node2"]->getOutputPort("p1"))->get();
-      char *text = PyUnicode_AsUTF8(data);
+      char *text = (char*) PyUnicode_AsUTF8(data);
       CPPUNIT_ASSERT_EQUAL(string("coucoucoucoucoucoucoucou"), string(text));
       delete p;
     }
@@ -268,7 +268,7 @@ void YacsLoaderTest::fschema()
   if (p)
     {
       PyObject *data = ((OutputPyPort*)p->nodeMap["node2"]->getOutputPort("p1"))->get();
-      char *text = PyUnicode_AsUTF8(data);
+      char *text = (char*) PyUnicode_AsUTF8(data);
       CPPUNIT_ASSERT_EQUAL(string("coucoucoucoucoucoucoucou"), string(text) );
       delete p;
     }
