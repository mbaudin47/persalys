<?xml version='1.0' encoding='iso-8859-1' ?>
<proc name="newSchema_1">
   <property name="DefaultStudyID" value="1"/>
   <type name="string" kind="string"/>
   <struct name="Engines/dataref">
      <member name="ref" type="string"/>
   </struct>
   <type name="bool" kind="bool"/>
   <sequence name="boolvec" content="bool"/>
   <type name="double" kind="double"/>
   <sequence name="dblevec" content="double"/>
   <objref name="file" id="file"/>
   <type name="int" kind="int"/>
   <sequence name="intvec" content="int"/>
   <struct name="stringpair">
      <member name="name" type="string"/>
      <member name="value" type="string"/>
   </struct>
   <sequence name="propvec" content="stringpair"/>
   <objref name="pyobj" id="python:obj:1.0"/>
   <sequence name="seqboolvec" content="boolvec"/>
   <sequence name="seqdblevec" content="dblevec"/>
   <sequence name="seqintvec" content="intvec"/>
   <sequence name="seqpyobj" content="pyobj"/>
   <sequence name="stringvec" content="string"/>
   <sequence name="seqstringvec" content="stringvec"/>
   <container name="DefaultContainer">
      <property name="container_kind" value="Salome"/>
      <property name="attached_on_cloning" value="0"/>
      <property name="container_name" value=""/>
      <property name="name" value="localhost"/>
   </container>
   <bloc name="Function_G">
      <bloc name="EtudeToCode">
         <remote name="GEOM_MESH">
            <script><code><![CDATA[from MEDLoader import *
name="Mesh_1"
grpName1="HAUT"
grpName2="BASE"

nbOfNodesPerAxis=3
arr=DataArrayDouble(nbOfNodesPerAxis) ; arr.iota() ; arr/=(nbOfNodesPerAxis-1)
arr*=Hauteur
m=MEDCouplingCMesh() ; m.setCoords(arr,arr,arr) ; m=m.buildUnstructured() ; m.setName(name)
Mesh=MEDFileUMesh() ; Mesh[0]=m
m1=m.computeSkin() ; Mesh[-1]=m1
m2=m1.buildDescendingConnectivity()[0] ; Mesh[-2]=m2
#
bary1=m1.getBarycenterAndOwner()[:,2]
grp1=bary1.getIdsInRange(Hauteur-1e-12,Hauteur+1e-12) ; grp1.setName(grpName1)
grp2=bary1.getIdsInRange(0.-1e-12,0.+1e-12) ; grp2.setName(grpName2)
Mesh.setGroupsAtLevel(-1,[grp1,grp2])
Mesh.removeFamiliesReferedByNoGroups()
]]></code></script>
            <load container="DefaultContainer"/>
            <inport name="Hauteur" type="double"/>
            <outport name="Mesh" type="pyobj"/>
         </remote>
         <remote name="JDD_SUBSTITUTION">
            <script><code><![CDATA[def substitute(fname,vals):
    f=file(fname,"r")
    st=f.read()
    for k,v in vals.iteritems():
        st=st.replace("${%s}"%k,str(v))
        pass
    return st

CommFile=substitute(CommTemplate,{"conduc":Conductivity})



]]></code></script>
            <load container="DefaultContainer"/>
            <inport name="Conductivity" type="double"/>
            <inport name="CommTemplate" type="string"/>
            <outport name="CommFile" type="string"/>
         </remote>
         <control> <fromnode>GEOM_MESH</fromnode> <tonode>JDD_SUBSTITUTION</tonode> </control>
      </bloc>
      <remote name="CODE_ASTER">
         <script><code><![CDATA[caseName="newStud"
fieldName="TEMP____TEMP"

import ASTER_Gen_idl
import salome
import os,cPickle
import tempfile
import shutil

salome.salome_init()
c=my_container.find_component_instance("ASTER",1)
if not c:
   a,_=my_container.load_component_Library("ASTER") ; assert(a)
   c=my_container.create_component_instance("ASTER",1)
#c=salome.lcc.FindOrLoadComponent("localhost","ASTER")

# prepare directories
outDir=tempfile.mkdtemp()
caseFile=os.path.join(outDir,"tmp.comm")
pathOfMEDFile=os.path.join(outDir,"Thermique.med")
# writing in outDir all necessary files
Mesh.write(pathOfMEDFile,2)
f=file(caseFile,"w") ; f.write(CommFile) ; f.flush()
# launch ASTER
st=c.AttachTo(salome.myStudy)
sc=st.AddCase(caseName,ASTER_Gen_idl._0_ASTER_ORB.FromComm)
sc.UseStr(ASTER_Gen_idl._0_ASTER_ORB.CommFile,caseFile)
sc.UseStr(ASTER_Gen_idl._0_ASTER_ORB.MedFile,pathOfMEDFile)
sc.UseStr(ASTER_Gen_idl._0_ASTER_ORB.WorkingDir,outDir)
job=sc.Run()
job.WaitResult()
assert(job.Status()==ASTER_Gen_idl._0_ASTER_ORB.Ended) # ResStatus == Alarm ???
sc.ResultFileName(ASTER_Gen_idl._0_ASTER_ORB.ResuFile)# RemoveRmed ResuFile RMedFile
# ASTER finished. Export the whole temperature field.
import MEDLoader as ml
outMedFile=os.path.join(outDir,"%s.rmed"%caseName)
fs=ml.MEDFileFields(outMedFile)
fmts=fs[fieldName]
assert(len(fmts)==1)
assert(len(fmts[0].getPfls())==0)
Mesh.setName(fmts.getMeshName())
TempField=fmts[0].getFieldOnMeshAtLevel(ml.ON_NODES,0,Mesh)
# clean tmp directory
shutil.rmtree(outDir)
]]></code></script>
         <load container="DefaultContainer"/>
         <inport name="CommFile" type="string"/>
         <inport name="Mesh" type="pyobj"/>
         <outport name="TempField" type="pyobj"/>
      </remote>
      <remote name="CodeToEtude">
         <script><code><![CDATA[# select nodeIds in group GrpName
assert(GrpName in Mesh.getGroupsNames())
levs=Mesh.getGrpNonEmptyLevelsExt(GrpName) ; assert(len(levs)==1)
m=Mesh[levs[0]]
ids=Mesh.getGroupArr(levs[0],GrpName)
m=m[ids]
nodeIds=m.computeFetchedNodeIds()
# extract average temperature from whole field TempField computed by ASTER
valsOnTop=TempField.getArray()[nodeIds]
TempTop=valsOnTop.getAverageValue()
]]></code></script>
         <load container="DefaultContainer"/>
         <inport name="TempField" type="pyobj"/>
         <inport name="Mesh" type="pyobj"/>
         <inport name="GrpName" type="string"/>
         <outport name="TempTop" type="double"/>
      </remote>
      <control> <fromnode>EtudeToCode</fromnode> <tonode>CODE_ASTER</tonode> </control>
      <control> <fromnode>CODE_ASTER</fromnode> <tonode>CodeToEtude</tonode> </control>
      <datalink control="false">
         <fromnode>CODE_ASTER</fromnode> <fromport>TempField</fromport>
         <tonode>CodeToEtude</tonode> <toport>TempField</toport>
      </datalink>
      <datalink control="false">
         <fromnode>EtudeToCode.JDD_SUBSTITUTION</fromnode> <fromport>CommFile</fromport>
         <tonode>CODE_ASTER</tonode> <toport>CommFile</toport>
      </datalink>
      <datalink control="false">
         <fromnode>EtudeToCode.GEOM_MESH</fromnode> <fromport>Mesh</fromport>
         <tonode>CODE_ASTER</tonode> <toport>Mesh</toport>
      </datalink>
      <datalink control="false">
         <fromnode>EtudeToCode.GEOM_MESH</fromnode> <fromport>Mesh</fromport>
         <tonode>CodeToEtude</tonode> <toport>Mesh</toport>
      </datalink>
   </bloc>
   <parameter>
      <tonode>Function_G.CodeToEtude</tonode><toport>GrpName</toport>
      <value><string>HAUT</string></value>
   </parameter>
   <parameter>
      <tonode>Function_G.EtudeToCode.JDD_SUBSTITUTION</tonode><toport>Conductivity</toport>
      <value><double>0.53</double></value>
   </parameter>
   <parameter>
      <tonode>Function_G.EtudeToCode.JDD_SUBSTITUTION</tonode><toport>CommTemplate</toport>
      <value><string>/home/ladier/temp/otgui/files/Thermique-OT_gen.comm</string></value>
   </parameter>
   <parameter>
      <tonode>Function_G.EtudeToCode.GEOM_MESH</tonode><toport>Hauteur</toport>
      <value><double>1</double></value>
   </parameter>
   <presentation name="Function_G.CodeToEtude" x="504" y="36" width="158" height="117" expanded="1" expx="504" expy="36" expWidth="158" expHeight="117" shownState="0"/>
   <presentation name="Function_G.EtudeToCode.JDD_SUBSTITUTION" x="8" y="116" width="158" height="90" expanded="1" expx="8" expy="116" expWidth="158" expHeight="90" shownState="0"/>
   <presentation name="Function_G.EtudeToCode" x="4" y="36" width="170" height="210" expanded="1" expx="4" expy="36" expWidth="170" expHeight="210" shownState="0"/>
   <presentation name="Function_G.CODE_ASTER" x="274" y="36" width="158" height="90" expanded="1" expx="274" expy="36" expWidth="158" expHeight="90" shownState="0"/>
   <presentation name="Function_G" x="12" y="40" width="666" height="250" expanded="1" expx="12" expy="40" expWidth="666" expHeight="250" shownState="0"/>
   <presentation name="Function_G.EtudeToCode.GEOM_MESH" x="6" y="34" width="158" height="63" expanded="1" expx="6" expy="34" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="__ROOT__" x="0" y="0" width="682" height="294" expanded="1" expx="0" expy="0" expWidth="682" expHeight="294" shownState="0"/>
</proc>
