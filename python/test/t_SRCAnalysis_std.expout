class=SRCAnalysis name=aSRC physicalModel=aModel interestVariables=[y0] simulationsNumber=1000 seed=2 blockSize=1
result= class=SRCResult name=Unnamed outputNames=[y0] indices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=1 dimension=2 description=[x0,x1] data=[[0.90576,0.0939758]]
class=SRCAnalysis name=aSRC2 physicalModel=aModel interestVariables=[y1] simulationsNumber=1000 seed=2 blockSize=1
result= class=SRCResult name=Unnamed outputNames=[y1] indices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=1 dimension=2 description=[x0,x1] data=[[0.90576,0.0939758]]
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import otguibase

myStudy = otguibase.Study('myStudy')
otguibase.Study.Add(myStudy)
dist_x0 = ot.Normal(0, 1)
x0 = otguibase.Input('x0', 0, dist_x0, '')
dist_x1 = ot.Normal(0, 1)
x1 = otguibase.Input('x1', 0, dist_x1, '')
x2 = otguibase.Input('x2', 10, '')
fake_y0 = otguibase.Output('fake_y0', '')
fake_y0.setIsSelected(False)
y0 = otguibase.Output('y0', '')
y1 = otguibase.Output('y1', '')
inputs = [x0, x1, x2]
outputs = [fake_y0, y0, y1]
formulas = ['x0', '10+3*x0+x1', '3*x0 + x1 + x2']
aModel = otguibase.SymbolicPhysicalModel('aModel', inputs, outputs, formulas)
myStudy.add(aModel)
aSRC = otguibase.SRCAnalysis('aSRC', aModel, 1000)
interestVariables = ['y0']
aSRC.setInterestVariables(interestVariables)
aSRC.setBlockSize(1)
aSRC.setSeed(2)
myStudy.add(aSRC)
aSRC2 = otguibase.SRCAnalysis('aSRC2', aModel, 1000)
interestVariables = ['y1']
aSRC2.setInterestVariables(interestVariables)
aSRC2.setBlockSize(1)
aSRC2.setSeed(2)
myStudy.add(aSRC2)

