[61.2676]
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import otguibase

myStudy = otguibase.Study('myStudy')
otguibase.Study.Add(myStudy)
dist_R = ot.LogNormal(5.69881, 0.0997513, 0)
R = otguibase.Input('R', 300, dist_R, 'Yield stress (Pa)')
dist_F = ot.Normal(75000, 5000)
F = otguibase.Input('F', 75000, dist_F, 'Traction force (N)')
G = otguibase.Output('G', 'Stress difference (Pa)')
inputs = [R, F]
outputs = [G]
code = """
from math import pi

def _exec(R, F):
    G = R-F/(pi*100.0)
    return G
"""
myPhysicalModel = otguibase.PythonPhysicalModel('myPhysicalModel', inputs, outputs, code)
myStudy.add(myPhysicalModel)
values = [300,75000]
lowerBounds = [0,66775.7]
upperBounds = [351.737,83224.3]
levels = [2,2]
design = otguibase.GridDesignOfExperiment('design', myPhysicalModel, lowerBounds, upperBounds, levels, values)
design.setBlockSize(1)
interestVariables = ['G']
design.setInterestVariables(interestVariables)
myStudy.add(design)
myTaylorExpansionMoments = otguibase.TaylorExpansionMomentsAnalysis('myTaylorExpansionMoments', myPhysicalModel)
myStudy.add(myTaylorExpansionMoments)
myMonteCarlo = otguibase.MonteCarloAnalysis('myMonteCarlo', myPhysicalModel)
myMonteCarlo.setMaximumCalls(1000)
myMonteCarlo.setMaximumCoefficientOfVariation(0.01)
myMonteCarlo.setMaximumElapsedTime(60)
myMonteCarlo.setBlockSize(1)
myMonteCarlo.setSeed(0)
myStudy.add(myMonteCarlo)
mySobol = otguibase.SobolAnalysis('mySobol', myPhysicalModel)
mySobol.setMaximumCalls(1000)
mySobol.setMaximumConfidenceIntervalLength(-1)
mySobol.setMaximumElapsedTime(60)
mySobol.setBlockSize(1)
mySobol.setReplicationSize(250)
mySobol.setSeed(0)
mySobol.setConfidenceLevel(0.95)
myStudy.add(mySobol)
mySRC = otguibase.SRCAnalysis('mySRC', myPhysicalModel, 1000)
mySRC.setBlockSize(1)
mySRC.setSeed(0)
myStudy.add(mySRC)

