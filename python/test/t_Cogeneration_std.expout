myStudy = otguibase.OTStudy('myStudy')
otguibase.OTStudy.AddOTStudy(myStudy)
dist_Q = ot.Normal(10200, 100)
Q = otguibase.Input('Q', 0, 'Primary energy', dist_Q)
dist_E = ot.Normal(3000, 15)
E = otguibase.Input('E', 0, 'Produced electric energy', dist_E)
dist_C = ot.Normal(4000, 60)
C = otguibase.Input('C', 0, 'Valued thermal energy', dist_C)
Ep = otguibase.Output('Ep', 0, 'Primary energy savings', '1-(Q/((E/((1-0.05)*0.54))+(C/0.8)))')
myPhysicalModel = otguibase.AnalyticalPhysicalModel('myPhysicalModel')
myPhysicalModel.addInput(Q)
myPhysicalModel.addInput(E)
myPhysicalModel.addInput(C)
myPhysicalModel.addOutput(Ep)
myStudy.addPhysicalModel(myPhysicalModel)
values = [0, 0, 0]
lowerBounds = [10035.5, 2975.33, 3901.31]
upperBounds = [10364.5, 3024.67, 4098.69]
levels = [2, 2, 2]
aDesign = otguibase.DesignOfExperiment('aDesign', myPhysicalModel, lowerBounds, upperBounds, levels, values)
myStudy.addDesignOfExperiment(aDesign)
myTaylorExpansionsMoments = otguibase.TaylorExpansionsMomentsAnalysis('myTaylorExpansionsMoments', myPhysicalModel)
myStudy.addAnalysis(myTaylorExpansionsMoments)
myMonteCarlo = otguibase.MonteCarloAnalysis('myMonteCarlo', myPhysicalModel, 1000)
myMonteCarlo.setSeed(0)
myStudy.addAnalysis(myMonteCarlo)
mySobol = otguibase.SobolAnalysis('mySobol', myPhysicalModel, 10000)
mySobol.setSeed(0)
myStudy.addAnalysis(mySobol)
mySRC = otguibase.SRCAnalysis('mySRC', myPhysicalModel, 10000)
mySRC.setSeed(0)
myStudy.addAnalysis(mySRC)

