class=FunctionalChaosAnalysis name=chaos_0 designOfExperiment=class=DesignOfExperiment name=design chaosDegree=6 sparseChaos=true leaveOneOutValidation=false
result= class=FunctionalChaosAnalysisResult name=Unnamed mean=class=NumericalPoint name=Unnamed dimension=1 values=[3.52578] variance=class=NumericalPoint name=Unnamed dimension=1 values=[13.4273] sobolResult=class=SobolResult name=Unnamed outputNames=[y0] firstOrderIndices=class=NumericalSample name=Unnamed implementation=class=NumericalSampleImplementation name=Unnamed size=1 dimension=3 description=[X0,X1,X2] data=[[0.31631,0.452263,0]] totalIndices=class=NumericalSample name=Unnamed implementation=class=NumericalSampleImplementation name=Unnamed size=1 dimension=3 data=[[0.547737,0.452263,0.231427]] callsNumber=0 coefficientOfVariation=-1 errorQ2LOO=class=NumericalPoint name=Unnamed dimension=0 values=[] q2LOO=class=NumericalPoint name=Unnamed dimension=0 values=[]
functionalChaosResult meta model=(3.52578 + 1.62849 * (1.73205 * x0) - 0.569859 * (-1.11803 + 3.3541 * x1^2) - 1.24518 * (-3.96863 * x0 + 6.61438 * x0^3) + 1.31209 * ((1.73205 * x0) * (-1.11803 + 3.3541 * x2^2)) - 1.9649 * (1.125 - 11.25 * x1^2 + 13.125 * x1^4) + 0.211447 * (6.21867 * x0 - 29.0205 * x0^3 + 26.1184 * x0^5) - 1.10249 * ((-3.96863 * x0 + 6.61438 * x0^3) * (-1.11803 + 3.3541 * x2^2)) + 0.412742 * ((1.73205 * x0) * (1.125 - 11.25 * x2^2 + 13.125 * x2^4)) + 1.37371 * (-1.12673 + 23.6614 * x1^2 - 70.9843 * x1^4 + 52.0551 * x1^6))o((| y0 = Normal(mu = 0, sigma = 1) -> y0 : Uniform(a = -1, b = 1)
| y1 = Normal(mu = 0, sigma = 1) -> y1 : Uniform(a = -1, b = 1)
| y2 = Normal(mu = 0, sigma = 1) -> y2 : Uniform(a = -1, b = 1)
)o(| y0 = Uniform(a = -3.14159, b = 3.14159) -> y0 : Normal(mu = 0, sigma = 1)
| y1 = Uniform(a = -3.14159, b = 3.14159) -> y1 : Normal(mu = 0, sigma = 1)
| y2 = Uniform(a = -3.14159, b = 3.14159) -> y2 : Normal(mu = 0, sigma = 1)
))
orthogonal basis=class=OrthogonalProductPolynomialFactory univariate polynomial collection=[class=OrthogonalUniVariatePolynomialFamily implementation=class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1,class=OrthogonalUniVariatePolynomialFamily implementation=class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1,class=OrthogonalUniVariatePolynomialFamily implementation=class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1] measure=class=ComposedDistribution name=ComposedDistribution dimension=3 copula=class=IndependentCopula name=IndependentCopula dimension=3 marginal[0]=class=Uniform name=Uniform dimension=1 a=-1 b=1 marginal[1]=class=Uniform name=Uniform dimension=1 a=-1 b=1 marginal[2]=class=Uniform name=Uniform dimension=1 a=-1 b=1
class=FunctionalChaosAnalysis name=chaos_1 designOfExperiment=class=DesignOfExperiment name=design2 chaosDegree=6 sparseChaos=false leaveOneOutValidation=true
result= class=FunctionalChaosAnalysisResult name=Unnamed mean=class=NumericalPoint name=Unnamed dimension=1 values=[3.53119] variance=class=NumericalPoint name=Unnamed dimension=1 values=[15.5375] sobolResult=class=SobolResult name=Unnamed outputNames=[y0] firstOrderIndices=class=NumericalSample name=Unnamed implementation=class=NumericalSampleImplementation name=Unnamed size=1 dimension=3 description=[X0,X1,X2] data=[[0.293642,0.419742,0.00299173]] totalIndices=class=NumericalSample name=Unnamed implementation=class=NumericalSampleImplementation name=Unnamed size=1 dimension=3 data=[[0.559956,0.496218,0.269671]] callsNumber=0 coefficientOfVariation=-1 errorQ2LOO=class=NumericalPoint name=Unnamed dimension=1 values=[0.177367] q2LOO=class=NumericalPoint name=Unnamed dimension=1 values=[0.664225]
functionalChaosResult meta model=(3.53119 + 1.67516 * (1.73205 * x0) + 0.0344502 * (1.73205 * x1) - 0.0132383 * (1.73205 * x2) + 0.180645 * (-1.11803 + 3.3541 * x0^2) + 0.00740771 * ((1.73205 * x0) * (1.73205 * x1)) - 0.0708152 * ((1.73205 * x0) * (1.73205 * x2)) - 0.551215 * (-1.11803 + 3.3541 * x1^2) - 0.0796244 * ((1.73205 * x1) * (1.73205 * x2)) - 0.175568 * (-1.11803 + 3.3541 * x2^2) - 1.27749 * (-3.96863 * x0 + 6.61438 * x0^3) + 0.00336428 * ((-1.11803 + 3.3541 * x0^2) * (1.73205 * x1)) - 0.0135878 * ((-1.11803 + 3.3541 * x0^2) * (1.73205 * x2)) + 0.164571 * ((1.73205 * x0) * (-1.11803 + 3.3541 * x1^2)) + 0.281069 * ((1.73205 * x0) * (1.73205 * x1) * (1.73205 * x2)) + 1.30932 * ((1.73205 * x0) * (-1.11803 + 3.3541 * x2^2)) - 0.0506759 * (-3.96863 * x1 + 6.61438 * x1^3) - 0.0715815 * ((-1.11803 + 3.3541 * x1^2) * (1.73205 * x2)) + 0.227226 * ((1.73205 * x1) * (-1.11803 + 3.3541 * x2^2)) + 0.0953069 * (-3.96863 * x2 + 6.61438 * x2^3) + 0.216619 * (1.125 - 11.25 * x0^2 + 13.125 * x0^4) - 0.209283 * ((-3.96863 * x0 + 6.61438 * x0^3) * (1.73205 * x1)) + 0.21662 * ((-3.96863 * x0 + 6.61438 * x0^3) * (1.73205 * x2)) + 0.247907 * ((-1.11803 + 3.3541 * x0^2) * (-1.11803 + 3.3541 * x1^2)) - 0.209119 * ((-1.11803 + 3.3541 * x0^2) * (1.73205 * x1) * (1.73205 * x2)) - 0.0111831 * ((-1.11803 + 3.3541 * x0^2) * (-1.11803 + 3.3541 * x2^2)) + 0.0379795 * ((1.73205 * x0) * (-3.96863 * x1 + 6.61438 * x1^3)) - 0.315547 * ((1.73205 * x0) * (-1.11803 + 3.3541 * x1^2) * (1.73205 * x2)) + 0.0143432 * ((1.73205 * x0) * (1.73205 * x1) * (-1.11803 + 3.3541 * x2^2)) - 0.0320743 * ((1.73205 * x0) * (-3.96863 * x2 + 6.61438 * x2^3)) - 1.97143 * (1.125 - 11.25 * x1^2 + 13.125 * x1^4) + 0.36509 * ((-3.96863 * x1 + 6.61438 * x1^3) * (1.73205 * x2)) - 0.00860413 * ((-1.11803 + 3.3541 * x1^2) * (-1.11803 + 3.3541 * x2^2)) - 0.189471 * ((1.73205 * x1) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.0192169 * (1.125 - 11.25 * x2^2 + 13.125 * x2^4) + 0.209098 * (6.21867 * x0 - 29.0205 * x0^3 + 26.1184 * x0^5) - 0.00770895 * ((1.125 - 11.25 * x0^2 + 13.125 * x0^4) * (1.73205 * x1)) - 0.0315445 * ((1.125 - 11.25 * x0^2 + 13.125 * x0^4) * (1.73205 * x2)) - 0.0291998 * ((-3.96863 * x0 + 6.61438 * x0^3) * (-1.11803 + 3.3541 * x1^2)) + 0.267498 * ((-3.96863 * x0 + 6.61438 * x0^3) * (1.73205 * x1) * (1.73205 * x2)) - 1.05381 * ((-3.96863 * x0 + 6.61438 * x0^3) * (-1.11803 + 3.3541 * x2^2)) - 0.126443 * ((-1.11803 + 3.3541 * x0^2) * (-3.96863 * x1 + 6.61438 * x1^3)) + 0.0187163 * ((-1.11803 + 3.3541 * x0^2) * (-1.11803 + 3.3541 * x1^2) * (1.73205 * x2)) + 0.0540657 * ((-1.11803 + 3.3541 * x0^2) * (1.73205 * x1) * (-1.11803 + 3.3541 * x2^2)) + 0.0148817 * ((-1.11803 + 3.3541 * x0^2) * (-3.96863 * x2 + 6.61438 * x2^3)) - 0.0199818 * ((1.73205 * x0) * (1.125 - 11.25 * x1^2 + 13.125 * x1^4)) - 0.0530289 * ((1.73205 * x0) * (-3.96863 * x1 + 6.61438 * x1^3) * (1.73205 * x2)) - 0.0828033 * ((1.73205 * x0) * (-1.11803 + 3.3541 * x1^2) * (-1.11803 + 3.3541 * x2^2)) + 0.167457 * ((1.73205 * x0) * (1.73205 * x1) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.544939 * ((1.73205 * x0) * (1.125 - 11.25 * x2^2 + 13.125 * x2^4)) - 0.0137112 * (6.21867 * x1 - 29.0205 * x1^3 + 26.1184 * x1^5) + 0.0250386 * ((1.125 - 11.25 * x1^2 + 13.125 * x1^4) * (1.73205 * x2)) + 0.0519052 * ((-3.96863 * x1 + 6.61438 * x1^3) * (-1.11803 + 3.3541 * x2^2)) + 0.0248213 * ((-1.11803 + 3.3541 * x1^2) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.025808 * ((1.73205 * x1) * (1.125 - 11.25 * x2^2 + 13.125 * x2^4)) + 0.0310721 * (6.21867 * x2 - 29.0205 * x2^3 + 26.1184 * x2^5) + 0.0324077 * (-1.12673 + 23.6614 * x0^2 - 70.9843 * x0^4 + 52.0551 * x0^6) - 0.0513673 * ((6.21867 * x0 - 29.0205 * x0^3 + 26.1184 * x0^5) * (1.73205 * x1)) + 0.144487 * ((6.21867 * x0 - 29.0205 * x0^3 + 26.1184 * x0^5) * (1.73205 * x2)) + 0.258925 * ((1.125 - 11.25 * x0^2 + 13.125 * x0^4) * (-1.11803 + 3.3541 * x1^2)) - 0.324507 * ((1.125 - 11.25 * x0^2 + 13.125 * x0^4) * (1.73205 * x1) * (1.73205 * x2)) - 0.0493528 * ((1.125 - 11.25 * x0^2 + 13.125 * x0^4) * (-1.11803 + 3.3541 * x2^2)) - 0.0805895 * ((-3.96863 * x0 + 6.61438 * x0^3) * (-3.96863 * x1 + 6.61438 * x1^3)) + 0.0953924 * ((-3.96863 * x0 + 6.61438 * x0^3) * (-1.11803 + 3.3541 * x1^2) * (1.73205 * x2)) + 0.0157082 * ((-3.96863 * x0 + 6.61438 * x0^3) * (1.73205 * x1) * (-1.11803 + 3.3541 * x2^2)) + 0.0631057 * ((-3.96863 * x0 + 6.61438 * x0^3) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.0911159 * ((-1.11803 + 3.3541 * x0^2) * (1.125 - 11.25 * x1^2 + 13.125 * x1^4)) + 0.223511 * ((-1.11803 + 3.3541 * x0^2) * (-3.96863 * x1 + 6.61438 * x1^3) * (1.73205 * x2)) + 0.0249805 * ((-1.11803 + 3.3541 * x0^2) * (-1.11803 + 3.3541 * x1^2) * (-1.11803 + 3.3541 * x2^2)) - 0.296723 * ((-1.11803 + 3.3541 * x0^2) * (1.73205 * x1) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.0648528 * ((-1.11803 + 3.3541 * x0^2) * (1.125 - 11.25 * x2^2 + 13.125 * x2^4)) + 0.166289 * ((1.73205 * x0) * (6.21867 * x1 - 29.0205 * x1^3 + 26.1184 * x1^5)) - 0.151173 * ((1.73205 * x0) * (1.125 - 11.25 * x1^2 + 13.125 * x1^4) * (1.73205 * x2)) - 0.0308698 * ((1.73205 * x0) * (-3.96863 * x1 + 6.61438 * x1^3) * (-1.11803 + 3.3541 * x2^2)) - 0.208561 * ((1.73205 * x0) * (-1.11803 + 3.3541 * x1^2) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.0197567 * ((1.73205 * x0) * (1.73205 * x1) * (1.125 - 11.25 * x2^2 + 13.125 * x2^4)) - 0.103801 * ((1.73205 * x0) * (6.21867 * x2 - 29.0205 * x2^3 + 26.1184 * x2^5)) + 1.52558 * (-1.12673 + 23.6614 * x1^2 - 70.9843 * x1^4 + 52.0551 * x1^6) + 0.029757 * ((6.21867 * x1 - 29.0205 * x1^3 + 26.1184 * x1^5) * (1.73205 * x2)) - 0.146043 * ((1.125 - 11.25 * x1^2 + 13.125 * x1^4) * (-1.11803 + 3.3541 * x2^2)) + 0.0681825 * ((-3.96863 * x1 + 6.61438 * x1^3) * (-3.96863 * x2 + 6.61438 * x2^3)) + 0.0627386 * ((-1.11803 + 3.3541 * x1^2) * (1.125 - 11.25 * x2^2 + 13.125 * x2^4)) - 0.0344358 * ((1.73205 * x1) * (6.21867 * x2 - 29.0205 * x2^3 + 26.1184 * x2^5)) - 0.0711792 * (-1.12673 + 23.6614 * x2^2 - 70.9843 * x2^4 + 52.0551 * x2^6))o((| y0 = Normal(mu = 0, sigma = 1) -> y0 : Uniform(a = -1, b = 1)
| y1 = Normal(mu = 0, sigma = 1) -> y1 : Uniform(a = -1, b = 1)
| y2 = Normal(mu = 0, sigma = 1) -> y2 : Uniform(a = -1, b = 1)
)o(| y0 = Uniform(a = -3.14159, b = 3.14159) -> y0 : Normal(mu = 0, sigma = 1)
| y1 = Uniform(a = -3.14159, b = 3.14159) -> y1 : Normal(mu = 0, sigma = 1)
| y2 = Uniform(a = -3.14159, b = 3.14159) -> y2 : Normal(mu = 0, sigma = 1)
))
orthogonal basis=class=OrthogonalProductPolynomialFactory univariate polynomial collection=[class=OrthogonalUniVariatePolynomialFamily implementation=class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1,class=OrthogonalUniVariatePolynomialFamily implementation=class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1,class=OrthogonalUniVariatePolynomialFamily implementation=class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1] measure=class=ComposedDistribution name=ComposedDistribution dimension=3 copula=class=IndependentCopula name=IndependentCopula dimension=3 marginal[0]=class=Uniform name=Uniform dimension=1 a=-1 b=1 marginal[1]=class=Uniform name=Uniform dimension=1 a=-1 b=1 marginal[2]=class=Uniform name=Uniform dimension=1 a=-1 b=1
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import otguibase

myStudy = otguibase.OTStudy('myStudy')
otguibase.OTStudy.Add(myStudy)
dist_xi1 = ot.Uniform(-3.14159, 3.14159)
xi1 = otguibase.Input('xi1', 0, '', dist_xi1)
dist_xi2 = ot.Uniform(-3.14159, 3.14159)
xi2 = otguibase.Input('xi2', 0, '', dist_xi2)
dist_xi3 = ot.Uniform(-3.14159, 3.14159)
xi3 = otguibase.Input('xi3', 0, '', dist_xi3)
y0 = otguibase.Output('y0', 0, '', 'sin(xi1) + (7.0) * (sin(xi2)) ^ 2 + (0.1) * xi3^4 * sin(xi1)')
model = otguibase.AnalyticalPhysicalModel('model')
model.addInput(xi1)
model.addInput(xi2)
model.addInput(xi3)
model.addOutput(y0)
myStudy.add(model)
values = [0, 0, 0]
lowerBounds = [-2.82743, -2.82743, -2.82743]
upperBounds = [2.82743, 2.82743, 2.82743]
levels = [2, 2, 2]
design = otguibase.FixedDesignOfExperiment('design', model, lowerBounds, upperBounds, levels, values)
myStudy.add(design)
design.run()
values = [0, 0, 0]
lowerBounds = [-2.82743, -2.82743, -2.82743]
upperBounds = [2.82743, 2.82743, 2.82743]
levels = [2, 2, 2]
design2 = otguibase.FixedDesignOfExperiment('design2', model, lowerBounds, upperBounds, levels, values)
myStudy.add(design2)
design2.run()
chaos_0 = otguibase.FunctionalChaosAnalysis('chaos_0', design)
chaos_0.setChaosDegree(6)
chaos_0.setSparseChaos(True)
chaos_0.setLeaveOneOutValidation(False)
myStudy.add(chaos_0)
chaos_1 = otguibase.FunctionalChaosAnalysis('chaos_1', design2)
chaos_1.setChaosDegree(6)
chaos_1.setSparseChaos(False)
chaos_1.setLeaveOneOutValidation(True)
myStudy.add(chaos_1)

