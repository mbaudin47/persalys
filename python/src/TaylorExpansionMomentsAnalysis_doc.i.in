%feature("docstring") OTGUI::TaylorExpansionMomentsAnalysis
"Taylor expansions for moments estimation.

Parameters
----------
name : str
    Name
physicalModel : :class:`~otguibase.PhysicalModel`
    Physical model

Examples
--------
>>> import openturns as ot
>>> import otguibase

Create the model:

>>> R = otguibase.Input('R', 0., 'Yield strength', ot.LogNormalMuSigma(300., 30., 0.).getDistribution())
>>> F = otguibase.Input('F', 0., 'Traction load', ot.Normal(75000., 5000.))
>>> G = otguibase.Output('Ep', 0., 'deviation')
>>> myPhysicalModel = otguibase.AnalyticalPhysicalModel('myPhysicalModel', [R, F], [G], ['R-F/(_pi*100.0)'])

Create the Taylor expansions analysis:

>>> analysis = otguibase.TaylorExpansionMomentsAnalysis('anAnalysis', myPhysicalModel)
>>> analysis.run()

Get the result:

>>> result = analysis.getResult()
>>> mean = result.getMeanFirstOrder()"

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::TaylorExpansionMomentsAnalysis::getResult
"Result accessor.

Returns
-------
result : :class:`~otguibase.TaylorExpansionMomentsResult`
    Result"