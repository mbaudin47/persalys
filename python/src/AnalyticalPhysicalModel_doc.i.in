%feature("docstring") OTGUI::AnalyticalPhysicalModel
"Physical model defined by analytical formulas.

Parameters
----------
name : str
    Name
inputs : sequence of :class:`~otguibase.Input`
    Input variables (optional)
outputs : sequence of :class:`~otguibase.Output`
    Output variables (optional)
formulas : sequence of str
    List of analytical formulas between the inputs and the outputs (optional).
    The function is defined by ouputs = formulas(inputs).

Examples
--------
>>> import openturns as ot
>>> import otguibase
>>> R = otguibase.Input('R', 0., ot.LogNormalMuSigma(300., 30., 0.).getDistribution(), 'Yield strength')
>>> F = otguibase.Input('F', 0., ot.Normal(75000., 5000.), 'Traction load')
>>> G = otguibase.Output('G', 'deviation')
>>> myPhysicalModel = otguibase.AnalyticalPhysicalModel('myPhysicalModel', [R, F], [G], ['R-F/(_pi*100.0)'])"

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::AnalyticalPhysicalModel::getFormulas
"Formulas accessor.

Returns
-------
formulas : :py:class:`openturns.Description`
    Output fomulas"

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::AnalyticalPhysicalModel::setFormulas
"Formulas accessor.

Parameters
----------
formulas : sequence of str
    Output fomulas"

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::AnalyticalPhysicalModel::getFormula
"Output formula accessor.

Parameters
----------
name : str
    Variable name

Returns
-------
formula : str
    Formula text"

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::AnalyticalPhysicalModel::setFormula
"Output formula accessor.

Parameters
----------
name : str
    Variable name
formula : str
    Formula text"


