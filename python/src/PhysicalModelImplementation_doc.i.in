%define OTGUI_PhysicalModel_doc
"Physical model base class.

Notes
-----
Can only be used through it's derived classes.
See :class:`~otguibase.SymbolicPhysicalModel`, :class:`~otguibase.PythonPhysicalModel`"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation
OTGUI_PhysicalModel_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getOutputNames_doc
"Output variable names accessor.

Returns
-------
names : :py:class:`openturns.Description`
    Ouput variable names"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getOutputNames
OTGUI_PhysicalModel_getOutputNames_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_addInput_doc
"Add an input variable.

Parameters
----------
input : :class:`~otguibase.Input`
    New variable"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::addInput
OTGUI_PhysicalModel_addInput_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_addOutput_doc
"Add an output variable.

Parameters
----------
output : :class:`~otguibase.Output`
    New variable"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::addOutput
OTGUI_PhysicalModel_addOutput_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_removeInput_doc
"Remove an input variable.

Parameters
----------
name : str
    Variable name"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::removeInput
OTGUI_PhysicalModel_removeInput_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_removeOutput_doc
"Remove an output variable.

Parameters
----------
name : str
    Variable name"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::removeOutput
OTGUI_PhysicalModel_removeOutput_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getFunction_doc
"Accessor to the underlying function.

Parameters
----------
outputNames : sequence of str
    Names of the outputs to be evaluated (optional)

Returns
-------
function : :py:class:`openturns.Function`
    Function evaluating the outputs"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getFunction
OTGUI_PhysicalModel_getFunction_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getPointToFieldFunction_doc
"Accessor to the underlying function.

Parameters
----------
outputNames : sequence of str
    Names of the outputs to be evaluated (optional)

Returns
-------
function : :py:class:`openturns.PointToFieldFunction`
    Function evaluating the outputs along the mesh nodes"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getPointToFieldFunction
OTGUI_PhysicalModel_getPointToFieldFunction_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getPythonScript_doc
"Python script accessor.

Returns
-------
script : str
    Python script to replay the calculus"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getPythonScript
OTGUI_PhysicalModel_getPythonScript_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setCopula_doc
"Copula accessor.

Parameters
----------
copula : :py:class:`openturns.Copula`
    The copula"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setCopula
OTGUI_PhysicalModel_setCopula_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getDistribution_doc
"Copula accessor.

Parameters
----------
Distribution : :py:class:`openturns.ComposedDistribution`
    The composed distribution"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getDistribution
OTGUI_PhysicalModel_getDistribution_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getCopula_doc
"Copula accessor.

Parameters
----------
copula : :py:class:`openturns.Copula`
    The copula"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getCopula
OTGUI_PhysicalModel_getCopula_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setInputDescription_doc
"Input description accessor.

Parameters
----------
name : str
    Variable name
description : str
    Description text"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setInputDescription
OTGUI_PhysicalModel_setInputDescription_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setOutputDescription_doc
"Output description accessor.

Parameters
----------
name : str
    Variable name
description : str
    Description text"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setOutputDescription
OTGUI_PhysicalModel_setOutputDescription_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setInputs_doc
"Input variables accessor.

Parameters
----------
inputs : sequence of :class:`~otguibase.Input`
    Input variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setInputs
OTGUI_PhysicalModel_setInputs_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getInputs_doc
"Input variables accessor.

Returns
-------
inputs : sequence of :class:`~otguibase.Input`
    Input variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getInputs
OTGUI_PhysicalModel_getInputs_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setOutputs_doc
"Output variables accessor.

Parameters
----------
outputs : sequence of :class:`~otguibase.Output`
    Output variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setOutputs
OTGUI_PhysicalModel_setOutputs_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getOutputs_doc
"Output variables accessor.

Returns
-------
outputs : sequence of :class:`~otguibase.Output`
    Output variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getOutputs
OTGUI_PhysicalModel_getOutputs_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getInputByName_doc
"Input variable accessor.

Parameters
----------
name : str
    Variable name

Returns
-------
input : :class:`~otguibase.Input`
    Input variable"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getInputByName
OTGUI_PhysicalModel_getInputByName_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getOutputByName_doc
"Output variable accessor.

Parameters
----------
name : str
    Variable name

Returns
-------
input : :class:`~otguibase.Output`
    Output variable"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getOutputByName
OTGUI_PhysicalModel_getOutputByName_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getInputDimension_doc
"Number of input variables accessor.

Returns
-------
dimension : int
    Number of input variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getInputDimension
OTGUI_PhysicalModel_getInputDimension_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getOutputDimension_doc
"Number of input variables accessor.

Returns
-------
dimension : int
    Number of output variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getOutputDimension
OTGUI_PhysicalModel_getOutputDimension_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getInputNames_doc
"Input variable names accessor.

Returns
-------
names : :py:class:`openturns.Description`
    Input variable names"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getInputNames
OTGUI_PhysicalModel_getInputNames_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getStochasticInputNames_doc
"Stochastic input variable names accessor.

Returns
-------
names : :py:class:`openturns.Description`
    Stochastic input variable names"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getStochasticInputNames
OTGUI_PhysicalModel_getStochasticInputNames_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getInputRandomVector_doc
"Input random vector accessor.

Returns
-------
names : :py:class:`openturns.RandomVector`
    Input random vector"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getInputRandomVector
OTGUI_PhysicalModel_getInputRandomVector_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getOutputRandomVector_doc
"Output random vector accessor.

Returns
-------
names : :py:class:`openturns.RandomVector`
    Output random vector"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getOutputRandomVector
OTGUI_PhysicalModel_getOutputRandomVector_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setInputName_doc
"Input variable name accessor.

Parameters
----------
name : str
    Variable name
newName : str
    New name"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setInputName
OTGUI_PhysicalModel_setInputName_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setOutputName_doc
"Output variable name accessor.

Parameters
----------
name : str
    Variable name
newName : str
    New name"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setOutputName
OTGUI_PhysicalModel_setOutputName_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setInputValue_doc
"Input variable name accessor.

Parameters
----------
name : str
    Variable name
value : float
    New value"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setInputValue
OTGUI_PhysicalModel_setInputValue_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setOutputValue_doc
"Output variable name accessor.

Parameters
----------
name : str
    Variable name
value : float
    New value"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setOutputValue
OTGUI_PhysicalModel_setOutputValue_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_hasInputNamed_doc
"Whether an input name matches.

Parameters
----------
name : str
    Variable name

Returns
-------
has : bool
    Whether a variable name matches"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::hasInputNamed
OTGUI_PhysicalModel_hasInputNamed_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_hasOutputNamed_doc
"Whether an output name matches.

Parameters
----------
name : str
    Variable name

Returns
-------
has : bool
    Whether a variable name matches"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::hasOutputNamed
OTGUI_PhysicalModel_hasOutputNamed_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_hasStochasticInputs_doc
"Whether it contains stochastic variables.

Returns
-------
has : bool
    Whether it contains stochastic variables"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::hasStochasticInputs
OTGUI_PhysicalModel_hasStochasticInputs_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_isValid_doc
"Whether it is valid.

Returns
-------
isValid : bool
    Whether it is valid"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::isValid
OTGUI_PhysicalModel_isValid_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setDistribution_doc
"Input distribution accessor.

Parameters
----------
name : str
    Variable name
distribution : :py:class:`openturns.Distribution`
    Variable distribution"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setDistribution
OTGUI_PhysicalModel_setDistribution_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setInputStochastic_doc
"Whether the input variable is stochastic.

Parameters
----------
name : str
    Variable name
isStochastic : bool
    Whether the input variable is stochastic"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setInputStochastic
OTGUI_PhysicalModel_setInputStochastic_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setDistributionParametersType_doc
"Input distribution parameter type accessor.

Parameters
----------
name : str
    Variable name
parametersType : int
    Distribution parameter type accessor"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setDistributionParametersType
OTGUI_PhysicalModel_setDistributionParametersType_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setFiniteDifferenceStep_doc
"Finite difference step accessor.

Parameters
----------
name : str
    Variable name
step : float
    Finite difference step used to define the gradient of the model's function"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setFiniteDifferenceStep
OTGUI_PhysicalModel_setFiniteDifferenceStep_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getRestrictedFunction_doc
"Accessor to the function restricted to it's stochastic inputs.

Parameters
----------
outputNames : sequence of str
    Output variables (optional)

Returns
-------
restricted : :py:class:`openturns.Function`
    Stochastic function"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getRestrictedFunction
OTGUI_PhysicalModel_getRestrictedFunction_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getRestrictedPointToFieldFunction_doc
"Accessor to the function restricted to it's stochastic inputs.

Parameters
----------
outputNames : sequence of str
    Output variables (optional)

Returns
-------
restricted : :py:class:`openturns.PointToFieldFunction`
    Stochastic function"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getRestrictedPointToFieldFunction
OTGUI_PhysicalModel_getRestrictedPointToFieldFunction_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getSelectedOutputsNames_doc
"Accessor to the selected outputs names.

Returns
-------
names : :py:class:`openturns.Description`
    Selected outputs names"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getSelectedOutputsNames
OTGUI_PhysicalModel_getSelectedOutputsNames_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_selectOutput_doc
"Select output.

Parameters
----------
name : str
    Output name
isSelected : bool
    Whether it is selected"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::selectOutput
OTGUI_PhysicalModel_selectOutput_doc

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::PhysicalModelImplementation::clearInputs
"Remove all the input variables."

// ---------------------------------------------------------------------

%feature("docstring") OTGUI::PhysicalModelImplementation::clearOutputs
"Remove all the output variables."

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_isParallel_doc
"Whether the evaluations of the model are parallelized.

Returns
-------
isParallel : bool
    Whether the evaluations of the model are parallelized (available only for the Python model)"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::isParallel
OTGUI_PhysicalModel_isParallel_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setParallel_doc
"Whether the evaluations of the model are parallelized.

Parameters
----------
isParallel : bool
    Whether the evaluations of the model are parallelized (available only for the Python model)"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setParallel
OTGUI_PhysicalModel_setParallel_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_hasMesh_doc
"Whether the model has a mesh.

Returns
-------
hasMesh : bool
    Whether the model has a mesh"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::hasMesh
OTGUI_PhysicalModel_hasMesh_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_setMeshModel_doc
"Mesh model accessor.

Parameters
----------
mesh : :class:`~otguibase.MeshModel`
    Mesh model"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::setMeshModel
OTGUI_PhysicalModel_setMeshModel_doc

// ---------------------------------------------------------------------

%define OTGUI_PhysicalModel_getMeshModel_doc
"Mesh model accessor.

Returns
-------
mesh : :class:`~otguibase.MeshModel`
    Mesh model"
%enddef
%feature("docstring") OTGUI::PhysicalModelImplementation::getMeshModel
OTGUI_PhysicalModel_getMeshModel_doc
