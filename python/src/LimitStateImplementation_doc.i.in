%define OTGUI_LimitState_doc
"Limit-state definition.

Parameters
----------
name : str
    Name
physicalModel : :class:`~otguibase.PhysicalModel`
    Physical model
outputName : str
    Interest variable name
operator : :class:`~otguibase.ComparisonOperator`
    Comparison operator against threshold (optional)
threshold : float
    Threshold value (optional)

Examples
--------
>>> import openturns as ot
>>> import otguibase
>>> R = otguibase.Input('R', 0., 'Yield strength', ot.LogNormal(300., 30., 0., ot.LogNormal.MUSIGMA))
>>> F = otguibase.Input('F', 0., 'Traction load', ot.Normal(75000., 5000.))
>>> G = otguibase.Output('Ep', 0., 'deviation', 'R-F/(_pi*100.0)')
>>> inputs = otguibase.InputCollection([R, F])
>>> outputs = otguibase.OutputCollection([G])
>>> physicalModel = otguibase.AnalyticalPhysicalModel('model1', inputs, outputs)
>>> limitState = otguibase.LimitState('ls1', physicalModel, 'G', ot.Less(), 0.)"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation
OTGUI_LimitState_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_setOutputName_doc
"Interest variable name accessor.

Parameters
----------
outputName : str
    Interest variable name"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::setOutputName
OTGUI_LimitState_setOutputName_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_getOutputName_doc
"Interest variable name accessor.

Returns
-------
outputName : str
    Interest variable name"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::getOutputName
OTGUI_LimitState_getOutputName_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_setThreshold_doc
"Threshold value accessor.

Parameters
----------
threshold : float
    Threshold value"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::setThreshold
OTGUI_LimitState_setThreshold_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_getThreshold_doc
"Threshold value accessor.

Returns
-------
threshold : float
    Threshold value"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::getThreshold
OTGUI_LimitState_getThreshold_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_getPythonScript_doc
"Python script accessor.

Returns
-------
script : str
    Python script to replay the calculus"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::getPythonScript
OTGUI_LimitState_getPythonScript_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_setPhysicalModel_doc
"Physical model accessor.

Parameters
----------
model : :class:`~otguibase.PhysicalModel`
    Physical model"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::setPhysicalModel
OTGUI_LimitState_setPhysicalModel_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_getPhysicalModel_doc
"Physical model accessor.

Returns
-------
model : :class:`~otguibase.PhysicalModel`
    Physical model"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::getPhysicalModel
OTGUI_LimitState_getPhysicalModel_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_setOperator_doc
"Comparison operator accessor.

Parameters
----------
operator : :class:`~openturns.ComparisonOperator`
    Comparison operator"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::setOperator
OTGUI_LimitState_setOperator_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_getOperator_doc
"Comparison operator accessor.

Returns
-------
operator : :class:`~openturns.ComparisonOperator`
    Comparison operator"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::getOperator
OTGUI_LimitState_getOperator_doc

// ---------------------------------------------------------------------

%define OTGUI_LimitState_isValid_doc
"Whether it is valid.

Returns
-------
isValid : bool
    Whether it is valid"
%enddef
%feature("docstring") OTGUI::LimitStateImplementation::isValid
OTGUI_LimitState_isValid_doc
