%feature("docstring") PERSALYS::CouplingInputFile
"Input file metadata for coupling.

Parameters
----------
path : str
    Path to the input file.
    When no template path is defined (see :meth:`setTemplatePath`), the file
    is understood as a resource (file or directory) to copy to the temporary
    working directory in which the command of the corresponding step is run.
    In that case the path to the resource can be absolute or relative, and the destination
    is the basename of the path joined to the temporary working directory.
    Else when a template path is defined (see :meth:`setTemplatePath`) it should be relative,
    and it is interpreted as the path to the file with the actual input values
    relatively to the temporary working directory.

See Also
--------
CouplingStep, CouplingOutputFile"

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::setPath
"Path accessor.

Parameters
----------
path : str
    Path to the input file, must be relative."

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::getPath
"Path accessor.

Returns
-------
path : :py:class:`openturns.Description`
    Path"

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::setTemplatePath
"Template path accessor.

Parameters
----------
template_path : str
    Template file path."

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::getTemplatePath
"Template path accessor.

Returns
-------
template_path : str
    Template file path."

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::setVariables
"Variables accessor.

Parameters
----------
names : sequence of str
    Variable names
tokens : sequence of str
    Tokens used for replacement in the template file."

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::getTokens
"Tokens accessor.

Returns
-------
tokens : :py:class:`openturns.Description`
    Tokens for each variable"

// ---------------------------------------------------------------------

%feature("docstring") PERSALYS::CouplingInputFile::getVariableNames
"Variable names accessor.

Returns
-------
variable_names : :py:class:`openturns.Description`
    Output variable names"
